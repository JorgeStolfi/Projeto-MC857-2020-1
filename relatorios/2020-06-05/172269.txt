Gabriel Marinho da Costa RA172269

Adicionei um novo campo {veiculo} nos modulos relacionados ao {trecho}, alterando as dependencias, como htmls que exibem informações de
trechos. Testei a implementação com modulos de testes já existentes, tais como html_resumo_de_trecho e html_pag_ver_trecho.

*Aparentemente minhas mudanças da aula passada, 29-05-2020 não foram aplicadas, minha tarefa era escrever o modulo de testes de
html_pag_contato, notei que a parte da utilização da função "testa" feita pelo professor ficou mais "elegante", pretendo usar esse padrão
nos próximos modulos de teste que eu fizer, segue abaixo meu relatório e o código que escrevi:

Relatório:

Gabriel Marinho da Costa RA172269

Escrevi o modulo de testes de html_pag_contato, testei dois casos, quando a sessão existe, portanto a mensagem de erros = None, e quando a 
sessão não existe, no caso coloquei None na sessao e uma string "Sessao inexistente" como mensagem de erro. O teste funcionou, quando a 
sessao existe a pagina retornou mais botoes no menu, qnd a sessao nao existe, retornou menos botoes e uma mensagem "Não foi possível 
completar a operação", acompanhada do erro que foi passado na função de teste, entretanto retornou também o fragmento html com o telefone 
de contato, não tenho certeza se era pra retornar esse fragmento, mas como não há nenhuma informação de usuário, conta ou algo do tipo, 
não acho que esteja de todo errado este retorno do contato neste teste. De qualquer forma a escolha da pagina que irá retornar em caso de 
erro na sessão fica a cargo da função html_pag_generica_IMP.

Código modulo html_pag_contato_TST:

#! /usr/bin/python3
import html_pag_contato
import sessao
import base_sql
import tabelas
import utils_testes
import sys

sys.stderr.write("Conectando com base de dados...\n")
res = base_sql.conecta("DB",None,None)
assert res == None

sys.stderr.write("Criando alguns objetos...\n")
tabelas.cria_todos_os_testes()

def testa(rotulo, *args):
  """Testa {funcao(*args)}, grava resultado 
  em "testes/saida/{modulo}.{funcao}.{rotulo}.html"."""
  
  modulo = html_pag_contato
  funcao = modulo.gera
  frag = False  # {True} se for apenas um fragmento HTML, {False} se for página completa.
  pretty = False # Se {True}, formata HTML para legibilidate (mas introduz brancos nos textos).
  utils_testes.testa_gera_html(modulo, funcao, rotulo, frag, pretty, *args)

# Sessao de teste
sessao = sessao.busca_por_identificador("S-00000001")
assert sessao != None

# Testando sessao existente
testa("SESSAO EXISTENTE", sessao, None)

# Testando sessao inexistente
testa("SESSAO INEXISTENTE", None, "Sessao inexistente")

